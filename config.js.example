let config = {
    port: 8080,
    host: null,
    cookieSecret: 'I<3Secur1ty', //if using ringtail auth, should match login server value
    skytap: {
        username: 'SKYTAP_USERNAME',
        token: 'SKYTAP_TOKEN',
        proxy: 'OPTIONAL_PROXY_SETTING'
    },
    client: {
        defaultRoute: '/projects',
        enableDeployment: true,
        intialize: {
            "status": "deployed"      
        },
    },
    ldap: {
        enabled: false,
        config : {
            url: 'LDAP_SERVER',
            baseDN: 'BASE_DN',
            username: 'USER@DOMAIN',
            password: 'PASSWORD' 
        },
        groups: ['GROUP1', 'GROUP2']
    },
    ringtail: {
        enabled: false, //when enabled, overrides any other type of auth
        url: 'https://login.ringtail.io?return=',
        cookieName: 'ringtail-user-details' //should match cookie name of login server
    },
    certificate: {
        //certificates go in the certs folder
        key: 'privatekey.key',
        cert: 'certificate.crt'
    },
    serviceName: 'RingtailDeployWeb'
};

if(process.env.skytapUser && process.env.skytapToken) {
  config.skytap.username = process.env.skytapUser;
  config.skytap.token = process.env.skytapToken;

  if(process.env.skytapProxy) {
    config.skytap.proxy = process.env.skytapProxy;
  } else {
    config.skytap.proxy = '';
  }
}

if(process.env.ringtailLoginEnabled) {
    config.ringtail.enabled = process.env.ringtailLoginEnabled;
}

if(process.env.port) {
    config.port = process.env.port;
}

if(process.env.host) {
    config.host = process.env.host;
}

if(process.env.certificateKey && process.env.certificate) {
    config.certificate.cert = process.env.certificate;
    config.certificate.key = process.env.certificateKey;
}

module.exports = config;